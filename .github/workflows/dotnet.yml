name: .NET

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: dotnet test --no-build --verbosity normal
    - name: DotNet Bump Versions
      # You may pin to the exact commit or the version.
      # uses: SiqiLu/dotnet-bump-version@e1c7b163e28a598cf7323ab9ccd8915a45c31040
      uses: SiqiLu/dotnet-bump-version@1.0.2
      with:
        # Version files to bump version. You can use Glob pattern string (like "**/*.csproj") or Glob patterns array json string (like "["**/*.csproj", ".version", "**/*.version.json"]"). Patterns supported by Globby are supported.Leading ! changes the meaning of an include pattern to exclude.
        version_files: # Dotnet.Core.Camerapi/Dotnet.Core.Camerapi.csproj # optional, default is **/*.csproj
        # the github token to push changes
        github_token: # optional

    - name: Publish NuGet
  # You may pin to the exact commit or the version.
  # uses: brandedoutcast/publish-nuget@c12b8546b67672ee38ac87bea491ac94a587f7cc
      uses: brandedoutcast/publish-nuget@v2.5.5
      with:
    # Filepath of the project to be packaged, relative to root of repository
        PROJECT_FILE_PATH:  Dotnet.Core.Camerapi/Dotnet.Core.Camerapi.csproj
    # NuGet package id, used for version detection & defaults to project name
        PACKAGE_NAME: CameraPi
    # API key to authenticate with NuGet server
        NUGET_KEY: ${{secrets.NUGET_KEY}}
    # Filepath with version info, relative to root of repository & defaults to PROJECT_FILE_PATH
        #VERSION_FILE_PATH: # optional
    # Regex pattern to extract version info in a capturing group
        #VERSION_REGEX: # optional, default is ^\s*<Version>(.*)<\/Version>\s*$
    # Useful with external providers like Nerdbank.GitVersioning, ignores VERSION_FILE_PATH & VERSION_REGEX
        #VERSION_STATIC: # optional
    # Flag to toggle git tagging, enabled by default
        #TAG_COMMIT: # optional, default is true
    # Format of the git tag, [*] gets replaced with actual version
        #TAG_FORMAT: # optional, default is v*
    # NuGet server uri hosting the packages, defaults to https://api.nuget.org
        #NUGET_SOURCE: # optional, default is https://api.nuget.org
    # Flag to toggle pushing symbols along with nuget package to the server, disabled by default
        #INCLUDE_SYMBOLS: # optional

#    - name: Publish
#      uses: brandedoutcast/publishnuget@2.5.2
#      with:
#        PROIECT_FILE.PATH: Dotnet.Core.Camerapi/Dotnet.Core.Camerapi.csproj 
#        NUGET_KEY: ${{secrets.NUGET_APl_KEY}}
